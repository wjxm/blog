(window.webpackJsonp=window.webpackJsonp||[]).push([[209],{629:function(t,s,a){"use strict";a.r(s);var n=a(30),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"什么是函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是函数"}},[t._v("#")]),t._v(" 什么是函数")]),t._v(" "),a("p",[t._v("函数是指将一组语句的集合通过一个名字(函数名)封装起来，要想执行这个函数，只需调用其函数名即可")]),t._v(" "),a("p",[a("strong",[t._v("函数的使用必须遵循一个原则：")]),t._v("\n先定义\n后调用")]),t._v(" "),a("h5",{attrs:{id:"特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特性"}},[t._v("#")]),t._v(" "),a("strong",[t._v("特性:")])]),t._v(" "),a("ol",[a("li",[t._v("减少重复代码")]),t._v(" "),a("li",[t._v("使程序变的可扩展")]),t._v(" "),a("li",[t._v("使程序变得易维护")])]),t._v(" "),a("h2",{attrs:{id:"函数的定义与调用："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的定义与调用："}},[t._v("#")]),t._v(" 函数的定义与调用：")]),t._v(" "),a("h3",{attrs:{id:"定义函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义函数"}},[t._v("#")]),t._v(" 定义函数")]),t._v(" "),a("p",[t._v("三种定义方式")]),t._v(" "),a("ul",[a("li",[a("h4",{attrs:{id:"无参函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#无参函数"}},[t._v("#")]),t._v(" 无参函数")])]),t._v(" "),a("li",[a("h4",{attrs:{id:"有参函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#有参函数"}},[t._v("#")]),t._v(" 有参函数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("def func(x,y): # x=1  y=2\n    print(x,y)\n func(1,2)\n")])])])]),t._v(" "),a("li",[a("h4",{attrs:{id:"空函数-函数体代码为pass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#空函数-函数体代码为pass"}},[t._v("#")]),t._v(" 空函数,函数体代码为pass")]),t._v(" "),a("p",[t._v("用于构建一个项目的大纲")])])]),t._v(" "),a("h3",{attrs:{id:"调用函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用函数"}},[t._v("#")]),t._v(" 调用函数")]),t._v(" "),a("ul",[a("li",[t._v("语句的形式:只加括号调用函数")]),t._v(" "),a("li",[t._v("表达式形式：")]),t._v(" "),a("li",[t._v("赋值表达式                         # res=add(1,2)")]),t._v(" "),a("li",[t._v("数学表达式                         # add(1,2)*10")]),t._v(" "),a("li",[t._v("函数调用可以当做参数     res=add(add(1,2),10)")])]),t._v(" "),a("h2",{attrs:{id:"函数的参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[t._v("#")]),t._v(" 函数的参数")]),t._v(" "),a("ul",[a("li",[a("h3",{attrs:{id:"形参和实参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#形参和实参"}},[t._v("#")]),t._v(" "),a("strong",[t._v("形参和实参")])]),t._v(" "),a("p",[a("code",[t._v("形参")]),t._v("：函数定义时候定义的参数称之为形式参数，简称形参,相当于变量名")]),t._v(" "),a("p",[a("code",[t._v("实参")]),t._v("：函数调用的时候传进来的值称之为实际参数，简称实参，相当于变量值")]),t._v(" "),a("ol",[a("li",[t._v("在调用阶段，实参（变量值）会绑定给形参（变量名）")]),t._v(" "),a("li",[t._v("这种绑定关系只能在函数体内使用")]),t._v(" "),a("li",[t._v("实参与形参的绑定关系在函数调用时生效，函数调用结束后解除绑定关系")])])]),t._v(" "),a("li",[a("h3",{attrs:{id:"位置参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#位置参数"}},[t._v("#")]),t._v(" 位置参数")])])]),t._v(" "),a("p",[t._v("按照从左到右的顺序依次定义的参数称之为位置参数")]),t._v(" "),a("ul",[a("li",[a("h3",{attrs:{id:"默认参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#默认参数"}},[t._v("#")]),t._v(" 默认参数")]),t._v(" "),a("p",[t._v("在定义函数阶段，就已经被赋值的形参，称之为默认参数\n特点：在定义阶段就已经被赋值，意味着在调用阶段可以不用为其赋值")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stu_register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("course"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("country"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CN"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("//")]),t._v(" country位置不填写，则默认为“CN”，country位置填写，则传入该值，\n\n")])])]),a("p",[t._v("注意：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("位置形参必须在默认参数的左边")])]),t._v(" "),a("li",[a("p",[t._v("默认参数的值是在函数定义阶段被赋值的，准确地说被赋予的是值的内存地址")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("m "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("m"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# y=>[111111, ]的内存地址")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3333333")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfunc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("虽然默认值可以被指定为任意数据类型，但是不推荐使用可变类型")])]),t._v(" "),a("li",[a("p",[t._v("函数最理想的状态：函数的调用只跟函数本身有关系，不外界代码的影响")])])])]),t._v(" "),a("li",[a("h3",{attrs:{id:"关键字参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关键字参数"}},[t._v("#")]),t._v(" 关键字参数")]),t._v(" "),a("p",[t._v("正常情况下，给函数"),a("code",[t._v("传参数要按顺序")]),t._v("，"),a("code",[t._v("不按顺序")]),t._v("就可以用"),a("code",[t._v("关键字参数")]),t._v("，按照key=value的形式传入的值，")]),t._v(" "),a("p",[a("strong",[t._v("注意")]),t._v(":")]),t._v(" "),a("ul",[a("li",[t._v("关键字参数"),a("code",[t._v("必须放在位置参数")]),t._v("之后")]),t._v(" "),a("li",[t._v("不能能为同一个形参重复传值")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stu_register")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" course"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PY'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("country"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'CN'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 正确调用")]),t._v("\nstu_register"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王山炮"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("course"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PY'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("country"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JP'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 错误调用")]),t._v("\nstu_register"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王山炮"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("course"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'PY'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("country"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JP'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nstu_register"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"王山炮"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("country"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'JP'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#这样相当于给age赋值2次，会报错！")]),t._v("\n")])])])]),t._v(" "),a("li",[a("h3",{attrs:{id:"非固定参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非固定参数"}},[t._v("#")]),t._v(" 非固定参数")]),t._v(" "),a("p",[t._v("函数在定义时不确定用户想传入多少个参数时，就可以使用非固定参数")]),t._v(" "),a("p",[a("strong",[t._v("可变长度的位置参数")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("*形参名：用来接收溢出的位置实参，溢出的位置实参会被*保存成元组的格式然后赋值紧跟其后的形参名\n*后跟的可以是任意名字，但是约定俗成应该是args\n")])])]),a("p",[a("code",[t._v("*arg")]),t._v(" 会将"),a("code",[t._v("多个值打包成一个元组")]),t._v("，也可以传一个元组或列表，但是要记得在传入的元组或列表前加*，否则python默认这是个列表，为外层元组中的一个元素")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("send_alert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nsend_alert"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("send_alert('alex','rain','eic',22) #会报错，alex后的全被*args截胡了，age得不到值\nsend_alert('alex','rain','eic',age = 22) #这样才正确\n```")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("**可变长度的关键字参数**\n\n```\n**形参名：用来接收溢出的关键字实参，**会将溢出的关键字实参保存成字典格式，然后赋值给紧跟其后的形参名\n**后跟的可以是任意名字，但是约定俗成应该是kwargs\n```\n\n`**kwarg `   会把传入的键值对形式，自动打包成字典，也可以传字典，但是得在前面加**\n\n```python\ndef stu_register(name,age,*args,**kwargs): \n 　　print(name,age,args,kwargs) \n\nstu_register(\"Alex\",22) \n#输出 Alex 22 () {}#后面这个{}就是kwargs,只是因为没传值,所以为空  \n\nstu_register(\"Jack\",32,\"CN\",\"Python\",sex=\"Male\",province=\"ShanDong\")\n#输出 # Jack 32 ('CN', 'Python') {'province': 'ShanDong', 'sex': 'Male'}\n\n\ndef func(x,y,z):\n    print(x,y,z)\n\nfunc(*{'x':1,'y':2,'z':3}) # func('x','y','z')\nfunc(**{'x':1,'y':2,'z':3}) # func(x=1,y=2,z=3)\n```\n")])])]),a("h2",{attrs:{id:"函数的返回值："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的返回值："}},[t._v("#")]),t._v(" 函数的返回值：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("函数外部的代码要想获取函数的执行结果，就可以在函数里用return语句把结果返回")])]),t._v(" "),a("li",[a("p",[t._v("函数在执行过程中遇到return语句，就会停止执行并返回结果，")])]),t._v(" "),a("li",[a("p",[t._v("如果未在函数中指定return,那这个函数的返回值为None")])]),t._v(" "),a("li",[a("p",[t._v("返回None：函数体内没有return")])]),t._v(" "),a("li",[a("p",[t._v("返回一个值：return 值")])]),t._v(" "),a("li",[a("p",[t._v("返回多个值：用逗号分隔开多个值，会被return返回成"),a("code",[t._v("元组")])])])]),t._v(" "),a("h2",{attrs:{id:"名称空间与作用域："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#名称空间与作用域："}},[t._v("#")]),t._v(" 名称空间与作用域：")]),t._v(" "),a("p",[t._v("名称空间namespacs：存放名字的地方，是对栈区的划分，")]),t._v(" "),a("p",[t._v("作用：有了名称空间之后，就可以在栈区中存放相同的名字，详细的，名称空间")]),t._v(" "),a("p",[a("strong",[t._v("名称空间有4种:"),a("code",[t._v("LEGB")])])]),t._v(" "),a("ul",[a("li",[a("p",[a("code",[t._v("locals")]),t._v(":函数内部的名字空间，一般包括函数的局部变量以及形式参数\n存活周期：在调用函数时存活，函数调用完毕后则销毁")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("enclosing function")]),t._v(":在嵌套函数中外部函数的名字空间, 若fun2嵌套在fun1里，对"),a("code",[t._v("fun2")]),t._v("来说，"),a("code",[t._v("fun1")]),t._v("的名字空间就enclosing.")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("globals")]),t._v(":当前的模块空间，模块就是一些"),a("code",[t._v("py")]),t._v("文件。也就是说，globals()类似全局变量。\n存活周期：python文件执行则产生，python文件运行完毕后销毁")])]),t._v(" "),a("li",[a("p",[a("strong",[a("code",[t._v("builtins")])]),t._v(": 内置模块空间，也就是解释器内置变量或者内置函数的名字空间，")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v(">>> print\n<built-in function print>   #built-in 内置功能\n>>> input\n<built-in function input>\n")])])]),a("p",[t._v("存活周期：python解释器启动则产生，python解释器关闭则销毁")])])]),t._v(" "),a("h3",{attrs:{id:"作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),a("p",[a("strong",[t._v("不同变量的作用域不同就是由这个变量所在的名称空间决定的")])]),t._v(" "),a("p",[t._v("作用域即范围")]),t._v(" "),a("ul",[a("li",[t._v("全局范围：全局存活，全局有效")]),t._v(" "),a("li",[t._v("局部范围：临时存活，局部有效")])]),t._v(" "),a("h3",{attrs:{id:"global与nonlocal"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global与nonlocal"}},[t._v("#")]),t._v(" global与nonlocal")]),t._v(" "),a("p",[t._v("如果再局部想要修改全局的名字对应的值（不可变类型），需要用global")]),t._v(" "),a("p",[t._v("nonlocal(了解): 修改函数外层函数包含的名字对应的值（不可变类型）")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("nonlocal")]),t._v(" x\n        x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v("\n    f2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'f1内的x：'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nf1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h2",{attrs:{id:"函数对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数对象"}},[t._v("#")]),t._v(" 函数对象")]),t._v(" "),a("p",[t._v("精髓:可以把函数当成变量去用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("可以赋值,给一个变量")])]),t._v(" "),a("li",[a("p",[t._v("可以把函数当做参数传给另外一个函数(传递的是内存)")])]),t._v(" "),a("li",[a("p",[t._v("可以当做函数当做另外一个函数的返回值")])]),t._v(" "),a("li",[a("p",[t._v("可以当做容器类型的一个元素")])])]),t._v(" "),a("p",[t._v("注意: 传递函数时是传递的函数内存地址")]),t._v(" "),a("h2",{attrs:{id:"函数的高级用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数的高级用法"}},[t._v("#")]),t._v(" 函数的高级用法")]),t._v(" "),a("h3",{attrs:{id:"嵌套使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#嵌套使用"}},[t._v("#")]),t._v(" 嵌套使用")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("函数的嵌套调用：在调用一个函数的过程中又调用其他函数")])]),t._v(" "),a("li",[a("p",[t._v("函数的嵌套定义:在函数内定义其他函数")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("def f1():\n    def f2():\n        pass\n")])])])])]),t._v(" "),a("p",[t._v("注意:多层函数嵌套使用，代码定义完成之后作用域已经生成，无法更改（在外面调用内层函数时，可以调用外层函数的值）")]),t._v(" "),a("h3",{attrs:{id:"匿名函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#匿名函数"}},[t._v("#")]),t._v(" 匿名函数")]),t._v(" "),a("p",[t._v("匿名函数也叫lambda表达式，")]),t._v(" "),a("p",[t._v("匿名函数的核心：一些简单的需要用函数去解决的问题，匿名函数的函数体只有一行")]),t._v(" "),a("p",[a("strong",[t._v("特点")])]),t._v(" "),a("ul",[a("li",[t._v("参数可以有多个，用逗号隔开")]),t._v(" "),a("li",[t._v("返回值和正常的函数一样可以是任意的数据类型")]),t._v(" "),a("li",[t._v("可以使用三元运算，一般与其他函数搭配使用")]),t._v(" "),a("li",[t._v("节省代码量，看着高级")])]),t._v(" "),a("img",{staticStyle:{width:"50%",margin:"0"},attrs:{src:"https://leiyiming.oss-cn-shenzhen.aliyuncs.com/img/1184802-20170803150959209-616064652.png",alt:"img"}}),t._v(" "),a("p",[t._v("与"),a("code",[t._v("map")]),t._v("方法搭配")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# def func(x):")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#     return x*x")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(list(map(func,l)))")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h5",{attrs:{id:"与filter方法的搭配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#与filter方法的搭配"}},[t._v("#")]),t._v(" 与"),a("code",[t._v("filter")]),t._v("方法的搭配")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" l"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("24")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("31")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("14")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# def func(x):")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#         return x>20")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(list(filter(func,l)))")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("filter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("l"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"函数标注"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数标注"}},[t._v("#")]),t._v(" 函数标注")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#function",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数标注"),a("OutboundLink")],1),t._v(" 是关于用户自定义函数中使用的类型的完全可选元数据信息（有关详情请参阅 "),a("a",{attrs:{href:"https://www.python.org/dev/peps/pep-3107",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("PEP 3107")]),a("OutboundLink")],1),t._v(" 和 "),a("a",{attrs:{href:"https://www.python.org/dev/peps/pep-0484",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("PEP 484")]),a("OutboundLink")],1),t._v(" ）。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://docs.python.org/zh-cn/3/glossary.html#term-function-annotation",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数标注"),a("OutboundLink")],1),t._v(" 以字典的形式存放在函数的 "),a("code",[t._v("__annotations__")]),t._v(" 属性中，并且不会影响函数的任何其他部分。 形参标注的定义方式是在形参名称后加上冒号，后面跟一个表达式，该表达式会被求值为标注的值。 返回值标注的定义方式是加上一个组合符号 "),a("code",[t._v("->")]),t._v("，后面跟一个表达式，该标注位于形参列表和表示 "),a("a",{attrs:{href:"https://docs.python.org/zh-cn/3/reference/compound_stmts.html#def",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("def")]),a("OutboundLink")],1),t._v(" 语句结束的冒号之间。 下面的示例有一个位置参数，一个关键字参数以及返回值带有相应标注:")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这个函数告诉我们，传值时，han得是str类型，eggs也得是str,并且希望函数返回 str类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("f")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ham"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eggs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'eggs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Annotations:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__annotations__"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Arguments:"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ham"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" eggs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ham "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' and '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" eggs\n\nf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'spam'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")])]),t._v(" "),a("h5",{attrs:{id:"递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归"}},[t._v("#")]),t._v(" 递归")]),t._v(" "),a("p",[t._v("函数内部，可以调用其他函数。如果一个函数在内部调用自身本身，这个函数就是递归函数。")]),t._v(" "),a("h6",{attrs:{id:"递归特性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归特性"}},[t._v("#")]),t._v(" 递归特性:")]),t._v(" "),a("ol",[a("li",[t._v("必须有一个明确的结束条件")]),t._v(" "),a("li",[t._v("每次进入更深一层递归时，问题规模相比上次递归都应有所减少")]),t._v(" "),a("li",[t._v("递归效率不高，递归层次过多会导致栈溢出（在计算机中，函数调用是通过栈（stack）这种数据结构实现的，每当进入一个函数调用，栈就会加一层栈帧，每当函数返回，栈就会减一层栈帧。由于栈的大小不是无限的，所以，递归调用的次数过多，会导致栈溢出）")])]),t._v(" "),a("h6",{attrs:{id:"递归的作用："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归的作用："}},[t._v("#")]),t._v(" 递归的作用：")]),t._v(" "),a("p",[t._v("可以用于解决很多算法问题，把复杂的问题分成一个个小问题，一一解决\n比如斐波那契数列，汉诺塔，多级评论树")]),t._v(" "),a("h6",{attrs:{id:"尾递归"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#尾递归"}},[t._v("#")]),t._v(" 尾递归")]),t._v(" "),a("p",[t._v("调用下一层时，和上一层完全无关系，只保留一层的栈数据，执行效率较高\nreturn cal(n+1) 尾递归\nreturn n*cal(n+1) n 还在等待下一层的结果，所以不是尾递归")]),t._v(" "),a("h6",{attrs:{id:"递归注意："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#递归注意："}},[t._v("#")]),t._v(" 递归注意：")]),t._v(" "),a("ul",[a("li",[t._v("默认最多递归1000层(防止占用大量内存）")]),t._v(" "),a("li",[t._v("可以修改最大递归层次\nimport os\nsys.setreccursionlimit(1500)")])])])}),[],!1,null,null,null);s.default=r.exports}}]);