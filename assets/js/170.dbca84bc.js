(window.webpackJsonp=window.webpackJsonp||[]).push([[170],{590:function(n,e,t){"use strict";t.r(e);var r=t(30),a=Object(r.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("::app::\ntext = {{}}\nclipboard = cc+%text%\nSend ^v Left\nreturn\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("Ctrl + 1 2 3 4 5分别复制 Alt + 1 2 3 4 5分别粘贴\n^1::\nsend ^c\na = %Clipboard%\nReturn\n\n^NumpadEnd::\nsend ^c\na = %Clipboard%\nReturn\n\n^Numpad1::\nsend ^c\na = %Clipboard%\nReturn\n\n^2::\nsend ^c\nb = %Clipboard%\nReturn\n\n^NumpadDown::\nsend ^c\nb = %Clipboard%\nReturn\n\n^Numpad2::\nsend ^c\nb = %Clipboard%\nReturn\n\n^3::\nsend ^c\nc = %Clipboard%\nReturn\n\n^NumpadPgDn::\nsend ^c\nc = %Clipboard%\nReturn\n\n^Numpad3::\nsend ^c\nc = %Clipboard%\nReturn\n\n^4::\nsend ^c\nd = %Clipboard%\nReturn\n\n^NumpadLeft::\nsend ^c\nd = %Clipboard%\nReturn\n\n^Numpad4::\nsend ^c\nd = %Clipboard%\nReturn\n\n^5::\nsend ^c\ne = %Clipboard%\nReturn\n\n^NumpadClear::\nsend ^c\ne = %Clipboard%\nReturn\n\n^Numpad5::\nsend ^c\ne = %Clipboard%\nReturn\n\n\n!1::\nClipboard = %a%\nsend ^v\nReturn\n\n!NumpadEnd::\nClipboard = %a%\nsend ^v\nReturn\n\n!Numpad1::\nClipboard = %a%\nsend ^v\nReturn\n\n\n!2::\nClipboard = %b%\nsend ^v\nReturn\n\n!NumpadDown::\nClipboard = %b%\nsend ^v\nReturn\n\n!Numpad2::\nClipboard = %b%\nsend ^v\nReturn\n\n\n!3::\nClipboard = %c%\nsend ^v\nReturn\n\n!NumpadPgDn::\nClipboard = %c%\nsend ^v\nReturn\n\n!Numpad3::\nClipboard = %c%\nsend ^v\nReturn\n\n\n!4::\nClipboard = %d%\nsend ^v\nReturn\n\n!NumpadLeft::\nClipboard = %d%\nsend ^v\nReturn\n\n!Numpad4::\nClipboard = %d%\nsend ^v\nReturn\n\n\n!5::\nClipboard = %e%\nsend ^v\nReturn\n\n!NumpadClear::\nClipboard = %e%\nsend ^v\nReturn\n\n!Numpad5::\nClipboard = %e%\nsend ^v\nReturn\n\n\n#w::\nsend !1\nsend !2\nsend !3\nsend !4\nsend !5\nReturn\n\n#v::\ntoPaste = %Clipboard%\nsend ^c\ntoCover = %Clipboard%\nClipboard = %toPaste%\nsend ^v\nClipboard = %toCover%\nReturn\n")])])]),t("p",[n._v("一秒输入一个a")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("; 【WIN+K】开关键 1秒输入一个a\n#k:: \nif ONOFF := !ONOFF \n    SetTimer, KeyPress, 1000 \nelse \n    SetTimer, KeyPress, Off \nReturn \nKeyPress: \nSend, a \nReturn\n")])])]),t("p",[n._v("【Win+P】 会暂停脚本. 再按一次则取消暂停")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#p::Pause \n")])])]),t("p",[n._v("定时器 lastNow 保证必然执行")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("\n#Persistent\nlastNow = 0\nSetTimer, autoTimer, 30000\nReturn\nautoTimer:\nFormatTime, now,, yyyyMMdd HH:mm\nFormatTime, HHmm,, HH:mm\nif (lastNow == now)\n    Return\nlastNow = %now%\nIfEqual, HHmm, 08:30, Msgbox,0,提醒,上班了,5\nIfEqual, HHmm, 12:00, Msgbox,0,提醒,吃饭喽,5\nIfEqual, HHmm, 18:00, Msgbox,0,提醒,下班了,5\nIfEqual, now, 20181128 09:00, Msgbox,0,提醒,2018-11-28 定时提醒,5\nReturn\n")])])]),t("p",[n._v(";选中路径，快速打开")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#j::\nsend ^c ; 复制选中的文字\nclipwait ; 等待复制动作的完成\nClipboard := Trim(clipboard,A_Space) ;去除空格\nRun  %clipboard%\nreturn\n")])])]),t("p",[n._v("koujincheng\t1234.abcdd")]),n._v(" "),t("p",[n._v("2020-06-12 13:32:48")]),n._v(" "),t("p",[n._v(";获取系统日期和时间")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("::/all::\nd = %A_YYYY%-%A_MM%-%A_DD% %A_Hour%:%A_Min%:%A_sec%\nclipboard = %d%\nSend ^v\nreturn\n\n::/kou::\nSend , koujincheng{Shift}{Tab}1234.abcdd{Enter}\nreturn\n")])])]),t("p",[n._v(";ctrl+win+c 得到当前选中文件的路径,保存到剪贴板中")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("^#c::\nsend ^c\nsleep,200\nclipboard=%clipboard% ;解释:windows复制的时候,剪贴板保存的是“路径”.只是路径而不是字符串,只要转换成字符串就可以粘贴出来了\ntooltip,%clipboard% ;提示文本\nsleep,2000\ntooltip, ;置空\nreturn\n")])])]),t("p",[n._v("; Win+O 关闭显示器")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#o::\nSleep 1000  ; 让用户有机会释放按键 (以防释放它们时再次唤醒显视器).\nSendMessage, 0x112, 0xF170, 2,, Program Manager   ; 关闭显示器: 0x112 为 WM_SYSCOMMAND, 0xF170 为 SC_MONITORPOWER. ; 可使用 -1 代替 2 打开显示器，1 代替 2 激活显示器的节能模式\nreturn\n")])])]),t("p",[n._v("音量加减")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("F10::SoundSet, +1,, mute\n\nF12::\n\nSend {Volume_Up 1}\n\n\nReturn\n\nF11::\nSend {Volume_Down 1}\n\nReturn\n")])])]),t("p",[n._v("不需要按回车间")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(':*:d::  ; 此热字串通过后面的命令把 "]d" 替换成当前日期和时间.\nFormatTime, CurrentDateTime,, M/d/yyyy h:mm tt  ; 看起来会像 9/1/2005 3:53 PM 这样\nSendInput %CurrentDateTime%\nreturn\n\n')])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v(';# Win(Windows 徽标键) \n;! Alt \n;^ Control \n;+ Shift \n;& 用于连接两个按键(含鼠标按键) 合并成一个自定义热键. \n\n\n#c::\nMsgBox, 4,, Would you like to continue?\nIfMsgBox, No\n    return  ; 如果选择 No, 脚本将会终止.\nMsgBox You pressed YES.  ; 否则, 用户选择了 YES.\n\n\n;双击home 灭屏     \n;##################################################################################################################\n~Home::\nIf Home_Presses > 0\n{\n    Home_Presses += 1\n    Return\n}\nHome_Presses = 1\nSetTimer, KeyHome, 300\nReturn\n\nKeyHome:\nSetTimer, KeyHome, Off\nIf Home_Presses = 2\n{\n    Sleep 1000\n\tSendMessage, 0x112, 0xF170, 2,, Program Manager\n}\nHome_Presses = 0\nReturn\n\n\n;音量\n;##################################################################################################################\nF10::SoundSet, +1,, mute\n\nF12::\n\nSend {Volume_Up 1}\n\n\nReturn\n\nF11::\nSend {Volume_Down 1}\n\nReturn\n\n\n;让脚本持久运行 (即直到用户关闭或遇到 ExitApp)\n;##################################################################################################################\n;#Persistent\n\n;强制加载新的脚本\n;##################################################################################################################\n#SingleInstance force\n\n;尝试加载图标\nIfExist, icon.ico ;花括号“{”不能和 IfExist 写在同一行\n{\nMenu TRAY, Icon, icon.ico ;这句会把 icon.ico 作为图标\n}\n\n\n\n;定时器 输入为分钟数\n;##################################################################################################################\n#t::\n; 弹出一个输入框，标题 内容\nInputBox ,time,定时器,请输入一个时间（单位是分钟）,,200,100 ;InputBox, time, 计时器, 请输入一个时间（单位是分钟）\ntime := time*1000*60 ; 变量赋值，多一个冒号，乘以 1000*60  变time为分钟数\nSleep,%time%\nMsgBox,,提示信息, 打卡啦\nreturn\n\n\n\n\n\n\n\n;打开everything\n;##################################################################################################################\n^!e::\nRun C:\\Program Files\\everything\\Everything.exe\nreturn\n\n;打开任务管理器\n;##################################################################################################################\n^!K::\nRun taskmgr\nreturn\n\n;打开远程连接\n^!m::\nRun mstsc\nreturn\n\n;新建或激活记事本窗口\n;##################################################################################################################\n^!n::\nIfWinExist ahk_class Notepad\nWinActivate\nelse\nRun Notepad\nreturn\n\n\n\n;截图工具 FSCapture\n;##################################################################################################################\n^!c::\nRun D:\\Program Files (x86)\\FScapture\\FSCapture.exe\nreturn\n\n\n\n\n\n\n;重新加载脚本\n;##################################################################################################################\n^!r::Reload  ; Assign Ctrl-Alt-R as a hotkey to restart the script.\n\n\n\n;##################################################window script#############################################################\n;###################################################窗口操作#################################################################\n\n;最大化或还原(取消最大化)窗口\n~LAlt::\nKeywait, LAlt, , t0.3\nif errorlevel = 1\nreturn\nelse\nKeywait, LAlt, d, t0.3\nif errorlevel = 0\n{\nWinGet, DAXIAO , MinMax, A\nif (DAXIAO = "1")\n{\nPostMessage, 0x112, 0xF120,,, A  ; 0x112 = WM_SYSCOMMAND, 0xF120 = SC_RESTORE\n}\nelse\n{\nPostMessage, 0x112, 0xF030,,, A  ; 0x112 = WM_SYSCOMMAND, 0xF030 = SC_MAXIMIZE\n}\n}\nreturn\n\n;最小化窗口 记录最后三个最小化的窗口\n~RAlt::\nKeywait, RAlt, , t0.3\nif errorlevel = 1\nreturn\nelse\nKeywait, RAlt, d, t0.3\nif errorlevel = 0\n{\nIf (WinActive("ahk_class Progman") or WinActive("ahk_class WorkerW"))\n{\n}\nelse\n{\nLast_Max_Id=0\nWinGet, Last_Min_Id, ID, A\nif (MinMemo1 = "0")\nMinMemo1=%Last_Min_Id%\nelse if(MinMemo2 = "0")\n{\nMinMemo2=%MinMemo1%\nMinMemo1=%Last_Min_Id%\n}\nelse\n{\nMinMemo3=%MinMemo2%\nMinMemo2=%MinMemo1%\nMinMemo1=%Last_Min_Id%\n}\nIfWinNotActive ahk_class TXGuiFoundation\nWinMinimize, A\nelse  ;qq窗口使用ctrl+alt+z 最小化\n{\nWinGetTitle, Temp0 , A\nIf Temp0 contains QQ20\n{\nsleep,100\nSend, {CTRLDOWN}{ALTDOWN}z{ALTUP}{CTRLUP}\n}\nelse\nWinMinimize, A\n}\n}\n} ;end if  errorlevel = 0\nreturn\n;恢复最小化的窗口,最多三个(只能识别通过脚本最小化的窗口)\n>!Space::\nif (MinMemo1 = "0") ;不存在通过脚本最小化的窗口\n{\nWinRestore, A\nWinActivate,A\n}\nelse if (MinMemo2 = "0") ;只有一个\n{\nWinRestore, ahk_id %MinMemo1%\nWinActivate, ahk_id %MinMemo1%\nMinMemo1=0\n}\nelse if (MinMemo3 = "0")\n{\nWinRestore, ahk_id %MinMemo1%\nWinActivate, ahk_id %MinMemo1%\nMinMemo1=%MinMemo2%\nMinMemo2=0\n}\nelse\n{\nWinRestore, ahk_id %MinMemo1%\nWinActivate, ahk_id %MinMemo1%\nMinMemo1=%MinMemo2%\nMinMemo2=%MinMemo3%\nMinMemo3=0\n}\nreturn\n\n\n\n\n\n;关闭窗口,在浏览器中为关闭标签页\n~Esc::\nKeywait, Esc, , t0.5\nif errorlevel = 1\nreturn\nelse\nKeywait, Esc, d, t0.2\nif errorlevel = 0\n{\nIfWinActive ahk_class ahk_class IEFrame ;识别IE浏览器\nSend {ctrldown}w{ctrlup}\nelse IfWinActive ahk_class MozillaWindowClass ;识别firfox 浏览器\nSend {ctrldown}w{ctrlup}\nelse\nsend !{F4}\n}\nreturn\n\n;##################################################other script#############################################################\n;###################################################其它脚本################################################################\n\n\n;快速按下两次Ctrl 快速粘贴\n/*\n~LCtrl::\nKeywait, LCtrl, , t0.5\nif errorlevel = 1\nreturn\nelse\nKeywait, LCtrl, d, t0.3\nif errorlevel = 0\n{\nSend,^v\n}\nreturn\n*/\n\n\n;win+shift+f 在桌面上建立一个以当前日期命名的文件夹\n#+f::\nClick right ;在桌面当前鼠标所在位置点击鼠标右键\nSend, wf ;快捷键新建文件夹\nSleep, 125 ; 把暂停时间改小\nclipboard = %A_MM%-%A_DD%-%A_YYYY% ;%A_Hour%-%A_Min%-%A_Sec%-%A_MSec%;把当前的系统日期发送到剪贴板\nSend, ^v{Enter} ;发送 Ctrl + v 和回车确认修改文件夹名称\nreturn\n\n;ctrl+win+c 得到当前选中文件的路径,保存到剪贴板中\n^#c::\nsend ^c\nsleep,200\nclipboard=%clipboard% ;解释:windows复制的时候,剪贴板保存的是“路径”.只是路径而不是字符串,只要转换成字符串就可以粘贴出来了\ntooltip,%clipboard% ;提示文本\nsleep,2000\ntooltip, ;置空\nreturn\n\n; Win+O 关闭显示器\n#o::\nSleep 1000  ; 让用户有机会释放按键 (以防释放它们时再次唤醒显视器).\nSendMessage, 0x112, 0xF170, 2,, Program Manager   ; 关闭显示器: 0x112 为 WM_SYSCOMMAND, 0xF170 为 SC_MONITORPOWER. ; 可使用 -1 代替 2 打开显示器，1 代替 2 激活显示器的节能模式\nreturn\n\n;获取当前系统日期\n::ddd::\n;获得系统时间比如今天的时间：2013-07-17。如果需要“年”的话请替换上面的“-”。\nd = %A_YYYY%-%A_MM%-%A_DD%\n;把 d 的值发送到剪贴板，变量不用声明，引用变量的值时在变量的前后加“%”。clipboard是 AHK 自带的变量:剪切板\nclipboard = %d%\nSend ^v\nreturn\n\n;获取当前系统时间\n::/time::\nd = %A_Hour%:%A_Min%:%A_sec%\nclipboard = %d%\nSend ^v\nreturn\n\n;获取系统日期和时间\n::/all::\nd = %A_YYYY%-%A_MM%-%A_DD% %A_Hour%:%A_Min%:%A_sec%\nclipboard = %d%\nSend ^v\nreturn\n\n::/kou::\nSend , koujincheng{Shift}{Tab}1234.abcdd{Enter}\nreturn\n\n;选中路径，快速打开\n#j::\nsend ^c ; 复制选中的文字\nclipwait ; 等待复制动作的完成\nClipboard := Trim(clipboard,A_Space) ;去除空格\nRun  %clipboard%\nreturn\n\n\n; Note: From now on whenever you run AutoHotkey directly, this script\n; will be loaded.  So feel free to customize it to suit your needs.\n\n; Please read the QUICK-START TUTORIAL near the top of the help file.\n; It explains how to perform common automation tasks such as sending\n; keystrokes and mouse clicks.  It also explains more about hotkeys.\n')])])]),t("p",[n._v("#绕过中文输入法直接发送英文字符")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('ascinput(string){\nu :=  A_IsUnicode ? 2 : 1 ;Unicode版ahk字符长度是2\nlength:=StrPut(string,"CP0")\nif(A_IsUnicode)\n    {\n    VarSetCapacity(address,length),StrPut(string,&address,"CP0")\n    }\nelse\n    address:=string\nVarSetCapacity(out,2*length*u)\nindex =0\nLoop\n{\nindex += 1\nif (index>length-1)\n    Break\nasc := NumGet(address,index-1,"UChar")\nif asc > 126\n    {\n    index += 1\n    asc2 := NumGet(address,index-1,"UChar")\n    asc := asc*256+asc2\n    }\nSend, % "{ASC " asc "}"\n}\n}\n \n \nascaltinput(string){\nu :=  A_IsUnicode ? 2 : 1 ;Unicode版ahk字符长度是2\nlength:=StrPut(string,"CP0")\nif(A_IsUnicode)\n    {\n    VarSetCapacity(address,length),StrPut(string,&address,"CP0")\n    }\nelse\n    address:=string\nVarSetCapacity(out,2*length*u)\nindex =0\nLoop\n{\nindex += 1\nif (index>length-1)\n    Break\nasc := NumGet(address,index-1,"UChar")\nif asc > 126\n    {\n    index += 1\n    asc2 := NumGet(address,index-1,"UChar")\n    asc := asc*256+asc2\n    }\nStringSplit, var, asc,\nLoop % var0\n{\nstr .= "{Numpad" var%A_index% "}"\n}\nsend, {AltDown}%str%{Altup}\nstr =\n}\n}\n\n \n::kk:: ;测试\nascinput("//")\n')])])])])}),[],!1,null,null,null);e.default=a.exports}}]);