(window.webpackJsonp=window.webpackJsonp||[]).push([[234],{656:function(v,t,a){"use strict";a.r(t);var _=a(30),p=Object(_.a)({},(function(){var v=this,t=v.$createElement,a=v._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("p",[v._v("多态性：指的是可以在不考虑对象的类型的情况下直接使用对象,定义的时候不知道调谁，执行的那一刻才知道")]),v._v(" "),a("p",[v._v("传递参数时不需要指定参数的数据类型。")]),v._v(" "),a("p",[v._v("区别于Java其他语言的首先要声明才能调用对象的特殊，python天生就是多态")]),v._v(" "),a("p",[v._v("Java一个类通过继承其他类，实现只要声明一个类，就能调用这个类所继承的所有类的对象")]),v._v(" "),a("p",[v._v("只要你的方法看起来像鸭子，那么我就认为你是鸭子，不用一定要继承父类，只要做得像一点就OK")]),v._v(" "),a("p",[v._v("class A:")]),v._v(" "),a("p",[v._v("class B:")]),v._v(" "),a("p",[v._v("def mypay(obj):")]),v._v(" "),a("p",[v._v("a = A()")]),v._v(" "),a("p",[v._v("mypay(a)")]),v._v(" "),a("p",[v._v("mypay(b)")]),v._v(" "),a("p",[v._v("定义一个函数专门调用对象的方法，不用管是什么类的对象，只要对象有这个方法就可以")]),v._v(" "),a("h2",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#"}},[v._v("#")])])])}),[],!1,null,null,null);t.default=p.exports}}]);