(window.webpackJsonp=window.webpackJsonp||[]).push([[205],{626:function(t,s,a){"use strict";a.r(s);var n=a(30),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h4",{attrs:{id:"集合的特性与作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的特性与作用"}},[t._v("#")]),t._v(" 集合的特性与作用")]),t._v(" "),a("p",[a("strong",[t._v("集合是一个数学概念：由一个或多个确定的元素所构成的整体叫做集合。")])]),t._v(" "),a("p",[a("strong",[t._v("集合中的元素有三个特征：")])]),t._v(" "),a("ul",[a("li",[t._v("确定性（元素必须可hash）")]),t._v(" "),a("li",[t._v("互异性（去重）")]),t._v(" "),a("li",[t._v("无序性（集合中的元素没有先后之分），如集合{3,4,5}和{3,5,4}算作同一个集合。")])]),t._v(" "),a("p",[a("strong",[t._v("集合的主要作用")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("去重，把一个列表变成一个集合就主动去重了。")]),t._v(" "),a("li",[t._v("关系测试，测试两组数据之前的交集差集并集等关系")])]),t._v(" "),a("h4",{attrs:{id:"集合的创建与转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的创建与转换"}},[t._v("#")]),t._v(" "),a("strong",[t._v("集合的创建与转换")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#集合的创建")]),t._v("\nse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#看起来像是没有值的字典")]),t._v("\nse "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注意： 创建的集合为空时，此时，se 是字典类型，不应该用次方式创建空字典")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 集合的转换")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#可转换字符串，列表，元组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("trupe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h4",{attrs:{id:"集合的常见用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集合的常见用法"}},[t._v("#")]),t._v(" 集合的常见用法")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("增加")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#1添加多个值，2合并集合与，（列表，集合）")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("删除")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[t._v("s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除并返回一个任意的集合元素。（测试中删除的第一个）")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除指定元素，若删除元素不存在，则报错")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("discard"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#删除指定元素，若删除元素不存在，不报错")]),t._v("\ns"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#清空")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("关系测试")])]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#交集")]),t._v("\nset1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("intersection"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nset1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v(" set2\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#差集")]),t._v("\nset1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("difference"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nset1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" set2\nset1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("difference_update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#将set1与set2的差集赋值给set1")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#并集")]),t._v("\nset1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("union"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nset1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" set2                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#管道符")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#对称差集")]),t._v("\nset1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("symmetric_difference"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#两个集合不相交的元素的集合，eg:只买了iphone7 or iphone8的人")]),t._v("\nset1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v(" set2\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#包含关系")]),t._v("\nset1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isdisjoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#判断set1与set2是否不相交")]),t._v("\nset1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issubset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#set1是否是set2的子集")]),t._v("\nset2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("issuperset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("set1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#set2是否是set1的超级　")]),t._v("\n")])])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);