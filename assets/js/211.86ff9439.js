(window.webpackJsonp=window.webpackJsonp||[]).push([[211],{631:function(t,s,n){"use strict";n.r(s);var a=n(30),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"命名空间"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命名空间"}},[t._v("#")]),t._v(" 命名空间")]),t._v(" "),n("p",[t._v("又名name space, 顾名思义就是存放名字的地方，存什么名字呢？举例说明，若变量x=1，1存放于内存中，那名字x存放在哪里呢？名称空间正是存放名字x与1绑定关系的地方")]),t._v(" "),n("p",[t._v("名称空间共四种，分别如下")]),t._v(" "),n("ul",[n("li",[n("p",[n("code",[t._v("locals")]),t._v(":函数内部的名字空间，一般包括函数的局部变量以及形式参数\n存活周期：在调用函数时存活，函数调用完毕后则销毁")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("enclosing function")]),t._v(":在嵌套函数中外部函数的名字空间, 若fun2嵌套在fun1里，对"),n("code",[t._v("fun2")]),t._v("来说，"),n("code",[t._v("fun1")]),t._v("的名字空间就enclosing.")])]),t._v(" "),n("li",[n("p",[n("code",[t._v("globals")]),t._v(":当前的模块空间，模块就是一些"),n("code",[t._v("py")]),t._v("文件。也就是说，globals()类似全局变量。\n存活周期：python文件执行则产生，python文件运行完毕后销毁")])]),t._v(" "),n("li",[n("p",[n("strong",[n("code",[t._v("builtins")])]),t._v(": 内置模块空间，也就是解释器内置变量或者内置函数的名字空间，")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v(">>> print\n<built-in function print>   #built-in 内置功能\n>>> input\n<built-in function input>\n")])])]),n("p",[t._v("存活周期：python解释器启动则产生，python解释器关闭则销毁")])])]),t._v(" "),n("h3",{attrs:{id:"作用域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#作用域"}},[t._v("#")]),t._v(" 作用域")]),t._v(" "),n("p",[t._v("不同变量的作用域不同就是由这个变量所在的命名空间决定的。")]),t._v(" "),n("p",[t._v("作用域即范围")]),t._v(" "),n("ul",[n("li",[t._v("全局范围：全局存活，全局有效")]),t._v(" "),n("li",[t._v("局部范围：临时存活，局部有效")])]),t._v(" "),n("p",[t._v("查看作用域方法 globals(),locals()")]),t._v(" "),n("h3",{attrs:{id:"名称空间的查找顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#名称空间的查找顺序"}},[t._v("#")]),t._v(" 名称空间的查找顺序")]),t._v(" "),n("p",[t._v('名称空间的"嵌套"关系是以函数定义阶段为准，与调用位置无关')]),t._v(" "),n("p",[t._v("当程序引用某个变量的名字时，就会从当前名字空间开始搜索。搜索顺序规则便是:"),n("code",[t._v("LEGB")]),t._v("。"),n("strong",[t._v("即locals -> enclosing function -> globals ->builtins")]),t._v("。一层一层的查找，找到了之后，便停止搜索，如果最后没有找到,则抛出在"),n("code",[t._v("NameError")]),t._v("的异常。")]),t._v(" "),n("h3",{attrs:{id:"名称空间的加载与销毁顺序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#名称空间的加载与销毁顺序"}},[t._v("#")]),t._v(" 名称空间的加载与销毁顺序")]),t._v(" "),n("p",[n("strong",[t._v("加载：")]),t._v(" 内置名称空间>全局名称空间>局部名称空间")]),t._v(" "),n("p",[t._v("**销毁：**局部名称空间>全局名空间>内置名称空间")]),t._v(" "),n("h2",{attrs:{id:"闭包函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#闭包函数"}},[t._v("#")]),t._v(" 闭包函数")]),t._v(" "),n("p",[t._v("主要用于嵌套函数,"),n("code",[t._v("在函数外部执行函数内部的函数，并使用函数内部作用域里的所有的值")]),t._v("称为闭包")]),t._v(" "),n("p",[t._v("闭包的意义：返回的函数对象，不仅仅是一个函数对象，在该函数外还包裹了一层作用域，这使得，该函数无论在何处调用，优先使用该函数在定义时自己外层包裹的作用域")]),t._v(" "),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  通过调用f1返回f2的内存地址的方式,来执行f2函数,f2函数始终使用f1这个外层函数里的作用域里的值,在下面代码中,无论将x 改变为何值,f2函数始终执行f1作用域下的x")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("33333333333333333333")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("f2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("'函数f2：'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" f2\nf"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("f1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# print(f)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# x=4444")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# f()")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    x"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5555")]),t._v("\n    f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nfoo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("h3",{attrs:{id:"装饰器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#装饰器"}},[t._v("#")]),t._v(" 装饰器")]),t._v(" "),n("p",[n("strong",[t._v("作用：")])]),t._v(" "),n("ul",[n("li",[t._v("装饰器指的是定义一个函数，该函数是用来为其他函数添加额外的功能")]),t._v(" "),n("li",[t._v("在不改变源代码的情况下为函数增加功能，遵循软件开发中的一个原则开放-封闭原则")])]),t._v(" "),n("p",[n("strong",[t._v("开放-封闭原则")])]),t._v(" "),n("ul",[n("li",[t._v("封闭：指的是对修改源代码是封闭的")]),t._v(" "),n("li",[t._v("开放：指的是对拓展功能是开放的")])]),t._v(" "),n("h4",{attrs:{id:"无参装饰器"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#无参装饰器"}},[t._v("#")]),t._v(" 无参装饰器")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v("def outter(func):\n    def wrapper(*args,**kwargs):\n        # 1、调用原函数\n        # 2、为其增加新功能\n        res=func(*args,**kwargs)\n        return res\n    return wrapper\n")])])]),n("div",{staticClass:"language-python extra-class"},[n("pre",{pre:!0,attrs:{class:"language-python"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在不修改源代码的情况下,为foo函数添加显示执行时间的功能")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" time\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("show_time")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 查看执行时间的函数")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("inner")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        start "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"spend %s"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("%")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" start"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" inner\n\n\n@ show_time "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 相当于foo = show_time(foo)")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    x "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\nfoo"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),n("p",[n("strong",[t._v("注意：")])]),t._v(" "),n("ul",[n("li",[t._v("装饰器必须采用至少双层函数，采用返回inner的方式")]),t._v(" "),n("li",[t._v("@符号 @show_time = {foo =show_time(foo)} 写在原功能函数前面")]),t._v(" "),n("li",[t._v("功能函数内有参数，相应装饰器函数也应该对应加参数")])]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[t._v('def logger(flag=""):\n\n    def show_time(f): #查看执行时间的函数\n        def inner():\n            start = time.time()\n            f()\n            end = time.time()\n            print("spend %s" % (end - start))\n            if flag =="True":\n                print("日志记录")\n\n        return inner\n    return show_time@logger("true")\n')])])])])}),[],!1,null,null,null);s.default=e.exports}}]);