(window.webpackJsonp=window.webpackJsonp||[]).push([[243],{664:function(v,_,p){"use strict";p.r(_);var s=p(30),t=Object(s.a)({},(function(){var v=this,_=v.$createElement,p=v._self._c||_;return p("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[p("p",[v._v("背景知识")]),v._v(" "),p("p",[v._v("顾名思义，进程即一个软件正在进行的过程。进程是对正在运行程序的一个抽象。")]),v._v(" "),p("p",[v._v("须知的理论基础：")]),v._v(" "),p("div",{staticClass:"language- extra-class"},[p("pre",{pre:!0,attrs:{class:"language-text"}},[p("code",[v._v("#一 操作系统的作用：\n    1：隐藏丑陋复杂的硬件接口，提供良好的抽象接口\n    2：管理、调度进程，并且将多个进程对硬件的竞争变得有序\n\n#二 多道技术：\n    1.产生背景：针对单核，实现并发\n    ps：\n    现在的主机一般是多核，那么每个核都会利用多道技术，但是核与核之间没有使用多道技术切换这么一说；\n    有4个cpu，运行于cpu1的某个程序遇到io阻塞，会等到io结束再重新调度，会被调度到4个cpu中的任意一个，具体由操作系统调度算法决定。\n    \n    2.时间上的复用（复用一个cpu的时间片）+空间上的复用（如内存中同时有多道程序）\n")])])]),p("p",[v._v("一、什么是进程")]),v._v(" "),p("p",[v._v("进程：正在进行的一个过程或是一个任务。而负责执行任务的是CPU。")]),v._v(" "),p("p",[v._v("举例：（单核+多道，实现多个进程的并发）：")]),v._v(" "),p("p",[v._v("比如说你就是一个CPU，你下午有几个活要干，吃饭，洗衣服，上厕所等。但是就在那一下午要把所有的事干完（而CPU同一时间只能干一件事），那么如何才能让多个任务实现并发执行的效果呢？那么，你应该这样做，你可以先做饭，在等待饭熟的过程中你可以去洗个衣服，洗的差不多饭也就熟了，那么你在去上个厕所也可以嘛。")]),v._v(" "),p("p",[v._v("二、进程与程序的区别")]),v._v(" "),p("p",[v._v("程序仅仅只是一堆代码而已，而进程指的是程序的运行过程")]),v._v(" "),p("p",[v._v("需要强调的是：同一程序执行两次，那也是进程，比如登录QQ，虽然都是同一个软件，但是一个可以视频聊天，一个可以逛空间。")]),v._v(" "),p("p",[v._v("三、并发和并行")]),v._v(" "),p("p",[v._v("并发：单CPU，多进程并发")]),v._v(" "),p("p",[v._v("并行：多CPU（同时运行，只有具有多个cpu才能实现并行）")]),v._v(" "),p("img",{attrs:{src:"https://images2017.cnblogs.com/blog/1184802/201708/1184802-20170824161043261-1875418366.png",alt:""}}),v._v(" "),p("p",[v._v("多道技术：内存中同时存入多道（多个）程序，cpu从一个进程快速切换到另外一个，使每个进程各自运行几十或几百毫秒，这样，虽然在某一个瞬间，一个cpu只能执行一个任务，但在1秒内，cpu却可以运行多个进程，这就给人产生了并行的错觉，即伪并发，以此来区分多处理器操作系统的真正硬件并行（多个cpu共享同一个物理内存）")]),v._v(" "),p("p",[v._v("四、同步和异步")]),v._v(" "),p("p",[v._v("同步执行：一个进程在执行某个任务时，另外一个进程必须等待其执行完毕，才能继续执行"),p("br",{attrs:{"data-filtered":"filtered"}}),v._v("异步执行：一个进程在执行某个任务时，另外一个进程无需等待其执行完毕，就可以继续执行，当有消息返回时，系统会通知后者进行处理，这样可以提高执行效率")]),v._v(" "),p("p",[v._v("但凡是硬件，都需要有操作系统去管理，只要有操作系统，就有进程的概念，就需要有创建进程的方式，一些操作系统只为一个应用程序设计，比如微波炉中的控制器，一旦启动微波炉，所有的进程都已经存在。")]),v._v(" "),p("p",[v._v("而对于通用系统（跑很多应用程序），需要有系统运行过程中创建或撤销进程的能力，主要分为4中形式创建新的进程")]),v._v(" "),p("p",[v._v("1. 系统初始化（查看进程linux中用ps命令，windows中用任务管理器，前台进程负责与用户交互，后台运行的进程与用户无关，运行在后台并且只在需要时才唤醒的进程，称为守护进程，如电子邮件、web页面、新闻、打印）")]),v._v(" "),p("p",[v._v("2. 一个进程在运行过程中开启了子进程（如nginx开启多进程，os.fork,subprocess.Popen等）")]),v._v(" "),p("p",[v._v("3. 用户的交互式请求，而创建一个新进程（如用户双击暴风影音）")]),v._v(" "),p("p",[v._v("4. 一个批处理作业的初始化（只在大型机的批处理系统中应用）")]),v._v(" "),p("p",[v._v("无论哪一种，新进程的创建都是由一个已经存在的进程执行了一个用于创建进程的系统调用而创建的：")]),v._v(" "),p("p",[v._v("1. 在UNIX中该系统调用是：fork，fork会创建一个与父进程一模一样的副本，二者有相同的存储映像、同样的环境字符串和同样的打开文件（在shell解释器进程中，执行一个命令就会创建一个子进程）")]),v._v(" "),p("p",[v._v("2. 在windows中该系统调用是：CreateProcess，CreateProcess既处理进程的创建，也负责把正确的程序装入新进程。")]),v._v(" "),p("p",[v._v("关于创建的子进程，UNIX和windows")]),v._v(" "),p("p",[v._v("1.相同的是：进程创建后，父进程和子进程有各自不同的地址空间（"),p("strong",[v._v("多道技术要求物理层面实现进程之间内存的隔离")]),v._v("），任何一个进程的在其地址空间中的修改都不会影响到另外一个进程。")]),v._v(" "),p("p",[v._v("2.不同的是：在UNIX中，子进程的初始地址空间是父进程的一个副本，提示：子进程和父进程是可以有只读的共享内存区的。但是对于windows系统来说，从一开始父进程与子进程的地址空间就是不同的。")]),v._v(" "),p("p",[v._v("六、进程的终止")]),v._v(" "),p("p",[v._v("1. 正常退出（自愿，如用户点击交互式页面的叉号，或程序执行完毕调用发起系统调用正常退出，在linux中用exit，在windows中用ExitProcess）")]),v._v(" "),p("p",[v._v("2. 出错退出（自愿，python a.py中a.py不存在）")]),v._v(" "),p("p",[v._v("3. 严重错误（非自愿，执行非法指令，如引用不存在的内存，1/0等，可以捕捉异常，try...except...）")]),v._v(" "),p("p",[v._v("4. 被其他进程杀死（非自愿，如kill -9）")]),v._v(" "),p("p",[v._v("七、进程的层次结构")]),v._v(" "),p("p",[v._v("无论UNIX还是windows，进程只有一个父进程，不同的是：")]),v._v(" "),p("p",[v._v("1. 在UNIX中所有的进程，都是以init进程为根，组成树形结构。父子进程共同组成一个进程组，这样，当从键盘发出一个信号时，该信号被送给当前与键盘相关的进程组中的所有成员。")]),v._v(" "),p("p",[v._v("2. 在windows中，没有进程层次的概念，所有的进程都是地位相同的，唯一类似于进程层次的暗示，是在创建进程时，父进程得到一个特别的令牌（"),p("strong",[v._v("称为句柄")]),v._v("）,该句柄可以用来控制子进程，但是父进程有权把该句柄传给其他子进程，这样就没有层次了。")]),v._v(" "),p("p",[v._v("八、进程的状态")]),v._v(" "),p("p",[v._v("tail -f access.log |grep '404'")]),v._v(" "),p("p",[v._v("执行程序tail，开启一个子进程，执行程序grep，开启另外一个子进程，两个进程之间基于管道'|'通讯，将tail的结果作为grep的输入。")]),v._v(" "),p("p",[v._v("进程grep在等待输入（即I/O）时的状态称为阻塞，此时grep命令都无法运行")]),v._v(" "),p("p",[v._v("其实在两种情况下会导致一个进程在逻辑上不能运行，")]),v._v(" "),p("p",[v._v("1. 进程挂起是自身原因，遇到I/O阻塞，便要让出CPU让其他进程去执行，这样保证CPU一直在工作")]),v._v(" "),p("p",[v._v("2. 与进程无关，是操作系统层面，可能会因为一个进程占用时间过多，或者优先级等原因，而调用其他的进程去使用CPU。")]),v._v(" "),p("p",[v._v("因而一个进程由三种状态")]),v._v(" "),p("img",{attrs:{src:"https://images2017.cnblogs.com/blog/1184802/201708/1184802-20170824161602136-2058825495.png",alt:""}}),v._v(" "),p("p",[v._v("九、进程并发的现象")]),v._v(" "),p("p",[v._v("进程并发的实现在于，硬件中断一个正在运行的进程，把此时进程运行的所有状态保存下来，为此，操作系统维护一张表格，即进程表（process table），每个进程占用一个进程表项（这些表项也称为进程控制块）")])])}),[],!1,null,null,null);_.default=t.exports}}]);