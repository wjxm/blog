(window.webpackJsonp=window.webpackJsonp||[]).push([[219],{641:function(e,t,n){"use strict";n.r(t);var a=n(30),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("p",[e._v("作用：记录程序运行中的日志")]),e._v(" "),n("p",[e._v("logging的日志可以分为 "),n("code",[e._v("debug(), info(), warning(), error() and critical()")]),e._v("5个级别")]),e._v(" "),n("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1151928/201805/1151928-20180524211406850-956451991.png",alt:""}}),e._v(" "),n("p",[e._v("简单的打印到屏幕")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('import logging\n\nlogging.warning("user [alex] attempted wrong password more than 3 times")\nlogging.critical("server is down")>>>  `WARNING:root:user [alex] attempted wrong password more than 3 times`\n')])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("`>>>   ``CRITICAL:root:server is down`\n")])])]),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("` `\n")])])]),n("p",[e._v("写入到文件")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import logging\n\nlogging.basicConfig(filename='example.log',level=logging.\bINFO)    #level设置级别，只显示所设置的级别，以及更高的级别\nlogging.debug('This message should go to the log file')\nlogging.info('So should this')\nlogging.warning('And this, too')\n")])])]),n("p",[e._v("自定义日志格式")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("mport logging\nlogging.basicConfig(format='%(asctime)s %(message)s', datefmt='%m/%d/%Y %I:%M:%S %p')\nlogging.warning('is when this event was logged.')\n\n#输出\n12/12/2010 11:46:36 AM is when this event was logged.\n")])])]),n("p",[e._v("支持的日志格式：")]),e._v(" "),n("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1151928/201805/1151928-20180524212219986-2147470891.png",alt:""}}),e._v(" "),n("p",[e._v("高级用法")]),e._v(" "),n("p",[e._v("同时输出到屏幕以及文件")]),e._v(" "),n("ul",[n("li",[e._v("logger提供了应用程序可以直接使用的接口；")]),e._v(" "),n("li",[e._v("handler将(logger创建的)日志记录发送到合适的目的输出；")]),e._v(" "),n("li",[e._v("filter提供了细度设备来决定输出哪条日志记录；")]),e._v(" "),n("li",[e._v("formatter决定日志记录的最终输出格式。")])]),e._v(" "),n("img",{attrs:{src:"https://images2018.cnblogs.com/blog/1151928/201805/1151928-20180524212554211-1506757681.png",alt:""}}),e._v(" "),n("p",[e._v("创建logger")]),e._v(" "),n("p",[e._v("每个程序在输出信息之前都要获得一个Logger。Logger通常对应了程序的模块名，比如聊天工具的图形界面模块可以这样获得它的Logger：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("logger=logging.getLogger(chat.gui)\nlogger1=logging.getLogger(chat.kernel)\n")])])]),n("p",[e._v("绑定handler")]),e._v(" "),n("p",[e._v("handler对象负责发送相关的信息到指定目的地。Python的日志系统有多种Handler可以使用。有些Handler可以把信息输出到控制台，有些Handler可以把信息输出到文件，还有些 Handler可以把信息发送到网络上。如果觉得不够用，还可以编写自己的Handler。可以通过addHandler()方法添加多个多handler")]),e._v(" "),n("ul",[n("li",[e._v("logging.StreamHandler 使用这个Handler可以向类似与sys.stdout或者sys.stderr的任何文件对象(file object)输出信息。")]),e._v(" "),n("li",[e._v("logging.FileHandler 和StreamHandler 类似，用于向一个文件输出日志信息。不过FileHandler会帮你打开这个文件\n")]),n("li",{staticStyle:{"box-sizing":"border-box","-webkit-tap-highlight-color":"transparent","text-size-adjust":"none","-webkit-font-smoothing":"antialiased","user-select":"text !important","font-size":"inherit"}},[e._v("\nlogging.handlers.RotatingFileHandler\n")])]),e._v(" "),n("p",[e._v("这个Handler类似于上面的FileHandler，但是它可以管理文件大小。当文件达到一定大小之后，它会自动将当前日志文件改名，然后创建 一个新的同名日志文件继续输出。比如日志文件是chat.log。当chat.log达到指定的大小之后，RotatingFileHandler自动把 文件改名为chat.log.1。不过，如果chat.log.1已经存在，会先把chat.log.1重命名为chat.log.2。。。最后重新创建 chat.log，继续输出日志信息。它的函数是：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import logging\nimport logging.handlers\nRotatingFileHandler( filename[, mode[, maxBytes[, backupCount]]])\n")])])]),n("p",[e._v("其中filename和mode两个参数和FileHandler一样。")]),e._v(" "),n("li",{staticStyle:{"list-style-type":"none"}},[n("ul",{staticStyle:{"box-sizing":"border-box","-webkit-tap-highlight-color":"transparent","text-size-adjust":"none","-webkit-font-smoothing":"antialiased","margin-top":"0px","margin-right":"0px","margin-bottom":"0px","font-size":"inherit",padding:"0px 0px 0px 2em","user-select":"text !important"}},[e._v("\n1. maxBytes用于指定日志文件的最大文件大小。如果maxBytes为0，意味着日志文件可以无限大，这时上面描述的重命名过程就不会发生。\n1. backupCount用于指定保留的备份文件的个数。比如，如果指定为2，当上面描述的重命名过程发生时，原有的chat.log.2并不会被更名，而是被删除。\n")])]),e._v(" "),n("ul",[n("li",[e._v("logging.handlers.TimedRotatingFileHandler")])]),e._v(" "),n("p",[e._v("这个Handler和RotatingFileHandler类似，不过，它没有通过判断文件大小来决定何时重新创建日志文件，而是间隔一定时间就 自动创建新的日志文件。重命名的过程与RotatingFileHandler类似，不过新的文件不是附加数字，而是当前时间。它的函数是：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("import logging\nimport logging.handlers\nTimedRotatingFileHandler( filename [,when [,interval [,backupCount]]])th = TimedRotatingFileHandler(os.path.join(BASE_DIR, 'doc', 'flow.log'), when=\"D\",interval=30)\n")])])]),n("p",[e._v("其中filename参数和backupCount参数和RotatingFileHandler具有相同的意义。")]),e._v(" "),n("p",[n("code",[e._v("interval")]),e._v("是时间间隔。")]),e._v(" "),n("p",[n("code",[e._v("when")]),e._v("参数是一个字符串。表示时间间隔的单位，不区分大小写。它有以下取值：")]),e._v(" "),n("li",{staticStyle:{"list-style-type":"none"}},[n("ul",{staticStyle:{"box-sizing":"border-box","-webkit-tap-highlight-color":"transparent","text-size-adjust":"none","-webkit-font-smoothing":"antialiased","margin-top":"0px","margin-right":"0px","margin-bottom":"0px","font-size":"inherit",padding:"0px 0px 0px 2em","user-select":"text !important"}},[e._v("\n1. S 秒\n1. M 分\n1. H 小时\n1. D 天\n1. W 每星期（interval==0时代表星期一）\n1. midnight 每天凌晨\n")])]),e._v(" "),n("p"),e._v(" "),n("p",[e._v("添加formatter组件")]),e._v(" "),n("p",[e._v("支持的格式见上表")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("fh = logging.FileHandler(\"access.log\")\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\nfh.setFormatter(formatter) #把formmater绑定到fh上\n")])])]),n("p",[e._v("添加filter组件")]),e._v(" "),n("h4",{attrs:{id:"formatter-组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#formatter-组件"}},[e._v("#")]),e._v(" formatter 组件")]),e._v(" "),n("p",[e._v("日志的formatter是个独立的组件，可以跟handler组合")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("<code style=\"box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; -webkit-font-smoothing: antialiased; font-family: Consolas, 'Liberation Mono', Menlo, Courier, monospace; font-size: 0.85em; padding: 0px; color: inherit; background: 0px 0px; border-radius: 0px; break-inside: avoid; direction: ltr; margin: 0px; border: none; display: inline; max-width: initial; overflow: initial; line-height: inherit; user-select: text !important;\">fh = logging.FileHandler(\"access.log\")\nformatter = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n\nfh.setFormatter(formatter) #把formmater绑定到fh上\n</code>\n")])])]),n("h4",{attrs:{id:"filter-组件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#filter-组件"}},[e._v("#")]),e._v(" filter 组件")]),e._v(" "),n("p",[e._v("如果你想对日志内容进行过滤，就可自定义一个filter")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<code class="lang-py" style="box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; -webkit-font-smoothing: antialiased; font-family: Consolas, \'Liberation Mono\', Menlo, Courier, monospace; font-size: 0.85em; padding: 0px; color: inherit; background: 0px 0px; border-radius: 0px; break-inside: avoid; direction: ltr; margin: 0px; border: none; display: inline; max-width: initial; overflow: initial; line-height: inherit; user-select: text !important;">class IgnoreBackupLogFilter(logging.Filter):\n    """忽略带db backup 的日志"""\n    def filter(self, record): #固定写法\n        return   "db backup" not in record.getMessage()\n</code>\n')])])]),n("blockquote"),e._v(" "),n("p",[e._v("注意filter函数会返加True or False，logger根据此值决定是否输出此日志")]),e._v(" "),n("p",[e._v("然后把这个filter添加到logger中")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<code class="lang-py" style="box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; -webkit-font-smoothing: antialiased; font-family: Consolas, \'Liberation Mono\', Menlo, Courier, monospace; font-size: 0.85em; padding: 0px; color: inherit; background: 0px 0px; border-radius: 0px; break-inside: avoid; direction: ltr; margin: 0px; border: none; display: inline; max-width: initial; overflow: initial; line-height: inherit; user-select: text !important;">logger.addFilter(IgnoreBackupLogFilter())\n</code>\n')])])]),n("p",[e._v("下面的日志就会把符合filter条件的过滤掉")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<code class="lang-py" style="box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; -webkit-font-smoothing: antialiased; font-family: Consolas, \'Liberation Mono\', Menlo, Courier, monospace; font-size: 0.85em; padding: 0px; color: inherit; background: 0px 0px; border-radius: 0px; break-inside: avoid; direction: ltr; margin: 0px; border: none; display: inline; max-width: initial; overflow: initial; line-height: inherit; user-select: text !important;">logger.debug("test ....")\nlogger.info("test info ....")\nlogger.warning("start to run db backup job ....")\nlogger.error("test error ....")\n</code>\n')])])]),n("p",[e._v("一个同时输出到屏幕、文件、带filter的完成例子")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<code class="lang-py" style="box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; -webkit-font-smoothing: antialiased; font-family: Consolas, \'Liberation Mono\', Menlo, Courier, monospace; font-size: 0.85em; padding: 0px; color: inherit; background: 0px 0px; border-radius: 0px; break-inside: avoid; direction: ltr; margin: 0px; border: none; display: inline; max-width: initial; overflow: initial; line-height: inherit; user-select: text !important;">import logging\n\n\n\nclass IgnoreBackupLogFilter(logging.Filter):\n    """忽略带db backup 的日志"""\n    def filter(self, record): #固定写法\n        return   "db backup" not in record.getMessage()\n\n\n\n\n#console handler\nch = logging.StreamHandler()\nch.setLevel(logging.INFO)\n#file handler\nfh = logging.FileHandler(\'mysql.log\')\n#fh.setLevel(logging.WARNING)\n\n\n#formatter\nformatter = logging.Formatter(\'%(asctime)s - %(name)s - %(levelname)s - %(message)s\')\n#bind formatter to ch\nch.setFormatter(formatter)\nfh.setFormatter(formatter)\n\nlogger = logging.getLogger("Mysql")\nlogger.setLevel(logging.DEBUG) #logger 优先级高于其它输出途径的\n\n\n#add handler   to logger instance\nlogger.addHandler(ch)\nlogger.addHandler(fh)\n\n\n\n#add filter\nlogger.addFilter(IgnoreBackupLogFilter())\n\nlogger.debug("test ....")\nlogger.info("test info ....")\nlogger.warning("start to run db backup job ....")\nlogger.error("test error ....")\n</code>\n')])])]),n("p",[e._v("文件自动截断例子")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('<code style="box-sizing: border-box; -webkit-tap-highlight-color: transparent; text-size-adjust: none; -webkit-font-smoothing: antialiased; font-family: Consolas, \'Liberation Mono\', Menlo, Courier, monospace; font-size: 0.85em; padding: 0px; color: inherit; background: 0px 0px; border-radius: 0px; break-inside: avoid; direction: ltr; margin: 0px; border: none; display: inline; max-width: initial; overflow: initial; line-height: inherit; user-select: text !important;">import logging\n\nfrom logging import handlers\n\nlogger = logging.getLogger(__name__)\n\nlog_file = "timelog.log"\n#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)\nfh = handlers.TimedRotatingFileHandler(filename=log_file,when="S",interval=5,backupCount=3)\n\n\nformatter = logging.Formatter(\'%(asctime)s %(module)s:%(lineno)d %(message)s\')\n\nfh.setFormatter(formatter)\n\nlogger.addHandler(fh)\n\n\nlogger.warning("test1")\nlogger.warning("test12")\nlogger.warning("test13")\nlogger.warning("test14")</code>\n')])])]),n("ol",[n("li",[e._v("logging.StreamHandler 使用这个Handler可以向类似与sys.stdout或者sys.stderr的任何文件对象(file object)输出信息。")]),e._v(" "),n("li",[e._v("logging.FileHandler 和StreamHandler 类似，用于向一个文件输出日志信息。不过FileHandler会帮你打开这个文件\n")]),n("li",{staticStyle:{"box-sizing":"border-box","-webkit-tap-highlight-color":"transparent","text-size-adjust":"none","-webkit-font-smoothing":"antialiased","user-select":"text !important","font-size":"inherit"}},[e._v("\nlogging.handlers.RotatingFileHandler\n")])])])}),[],!1,null,null,null);t.default=i.exports}}]);